---
language: python
python:
  - "2.7"

bofore_install:
  - cd ansible-playbook
  - sudo apt-get update -qq

install:
  - pip install ansible
  # Tell Ansible where the roles are
  #- printf '[defaults]\nroles_path = ansible-playbook/roles' > ansible.cfg
  - sudo ansible-galaxy install smola.java

script:
  
  # Syntax check
  - ansible-playbook -i tests/inventory site.yml --syntax-check

  # First run
  - ansible-playbook -i tests/inventory site.yml --connection=local --sudo

  # Idempotence check
  - >
    ansible-playbook -i tests/inventory site.yml --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence: \e[32mOk\e[39m') || (echo 'Idempotence: \e[31mfail\e[39m' && touch failed)

  # Check Git
  - >
    git --version | grep -q "git version" 
    && (echo -e "Git: \e[32mOk\e[39m") || (echo -e "Git: \e[31mfail\e[39m" && touch fail)

  # Check Subversion
  - >
    svn --version | grep -q "svn, version" 
    && (echo -e "Subversion: \e[32mOk\e[39m") || (echo -e "Subversion: \e[31mfail\e[39m" && touch fail)

  # Check Mercurial
  - >
    hg --version | grep -q "Mercurial Distributed SCM" 
    && (echo -e "Mercurial: \e[32mOk\e[39m") || (echo -e "Mercurial: \e[31mfail\e[39m" && touch fail)

  # Check java
  - >
    java -version 2>&1 | grep -q "java version \"1.8"
    && (echo -e "java: \e[32mOk\e[39m") || (echo -e "java: \e[31mfail\e[39m" && touch fail)

  # Check if any step failed
  - >
    "ls" -1 | grep -q "fail"
    && (echo -e "\e[31mFAIL\e[39m" && exit 1) || (echo -e "\e[32mSUCCESS\e[39m" && exit 0)
