#!/usr/bin/env bash

set -eo pipefail
#set -x

# Needed to know where to look for additional scripts
SETUP_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Remember user details before runnig sudo
# (running sudo changes those)

# Needed to chown new files/directories
USER_NAME=$USER
# Where to create symlinks
USER_HOME="$HOME"
# OS
if [[ -f /etc/redhat-release ]]; then
	OS='redhat'
elif [[ -f /etc/debian_version ]]; then
	OS='debian'
elif [[ $(uname) == 'Darwin' ]]; then
	OS='macos'
else
	echo "Unsupported OS $(uname)"
	exit 1
fi

main() {

    echo "SETUP_HOME=$SETUP_HOME"
    echo "USER_NAME=$USER_NAME"
    echo "USER_HOME=$USER_HOME"
    echo "OS=$OS"

    install_package wget

    install_shell
    install_pip
    install_nvim
    install_custom_tools

    echo 'Done'

}

install_shell() {
    install_package zsh tmux
    # Change default shell
    change_default_shell $(which zsh)
    # Install Oh My Zsh
    local oh_my_zsh_home=$USER_HOME/.oh-my-zsh
    if [ ! -d $oh_my_zsh_home ]; then
        git clone "https://github.com/robbyrussell/oh-my-zsh.git" $oh_my_zsh_home
    else
	git -C $oh_my_zsh_home pull
    fi
    install_powerline_fonts
    # install powerlevel9k theme
    local powerlevel9k_home=$oh_my_zsh_home/custom/themes/powerlevel9k
    if [ ! -d $powerlevel9k_home ]; then
        git clone "https://github.com/bhilburn/powerlevel9k.git" $powerlevel9k_home
    else
	git -C $powerlevel9k_home pull
    fi
    make_symlink $SETUP_HOME/home/.zshrc $USER_HOME/.zshrc
}

install_custom_tools() {
    make_symlink "$SETUP_HOME/bin/f" "/usr/local/bin/f"
    make_symlink "$SETUP_HOME/bin/pack" "/usr/local/bin/pack"
    make_symlink "$SETUP_HOME/bin/unpack" "/usr/local/bin/unpack"
}

install_pip() {
    case $OS in
	    macos)
		    brew install python
		    brew install python3
		    ;;
    esac
}

install_nvim() {
    echo "Installing neovim"
    case $OS in
	    debian)
		    add-apt-repository ppa:neovim-ppa/unstable -y
		    # also install xsel for clipboard support
		    install_package neovim xsel
		    sudo pip install neovim
		    sudo pip3 install neovim
		    sudo pip install jedi
		    ;;
	    macos)
		    brew install neovim/neovim/neovim
		    pip install neovim
		    pip3 install neovim
		    pip install jedi
		    ;;
    esac

    mkdir -p "$USER_HOME/.config/nvim"
    make_symlink "$SETUP_HOME/home/.config/nvim/init.vim" "$USER_HOME/.config/nvim/init.vim"
    install_powerline_fonts
}

install_powerline_fonts() {
    echo "Installing Powerline fonts"
    case $OS in
	    macos)
		    local font_dir="$USER_HOME/Library/Fonts"
		    ;;
	    *)
		    local font_dir="$USER_HOME/.local/share/fonts"
		    ;;
    esac
    mkdir -p $font_dir
    cd $font_dir
    # install font DejaVu Sans Mono
    wget -q --timestamping --progress=bar:force:noscroll "https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20Oblique%20for%20Powerline.ttf"
    wget -q --timestamping --progress=bar:force:noscroll "https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20for%20Powerline.ttf"
    wget -q --timestamping --progress=bar:force:noscroll "https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Oblique%20for%20Powerline.ttf"
    wget -q --timestamping --progress=bar:force:noscroll "https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf"
    if [[ $OS == 'redhat' || $OS == 'debian' ]]; then
	    fc-cache -vf $font_dir

    fi
}

make_symlink() {
    local target="$1"
    local link_name="$2"

    # ensure link path (won't complain if exists)
    mkdir -p $(dirname "$link_name")
    rm -f "$link_name"
    ln -s "$target" "$link_name"
}

change_default_shell() {
	local new_shell="$1"
	case $OS in
		redhat)
 			#todo: currently requires restart, fix it
			sudo usermod -s "$new_shell" "$USER_NAME"
			;;
		debian)
			sudo chsh -s "$new_shell" $USER_NAME
			;;
		macos)
			# Add the new shell to the accepted list of shells if it's not there yet
			# Without this chsh will fail with 'non-standard shell'
			if ! grep -q $new_shell /etc/shells; then
				# Cannot use sudo together with >>, so appending with tee
				echo $new_shell | sudo tee -a /etc/shells
			fi
			sudo chsh -s $new_shell $USER_NAME
	esac
}

install_package() {
    local packages="$@"
    case $OS in
	    redhat)
		    sudo yum -y install $@
		    ;;
	    ubuntu)
		    sudo apt-get -y install $@
		    ;;
	    macos)
		    brew install $@
		    ;;
    esac
}

main
